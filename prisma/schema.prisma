generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Vehicle {
  id              String    @id @default(uuid())
  brand           String
  model           String
  year            Int
  color           String
  vin             String    @unique
  mileage         Float
  purchasePrice   Float
  purchaseDate    DateTime  @default(now())
  status          String    @default("acquired") // acquired, in_preparation, for_sale, sold
  images          Image[]
  expenses        Expense[]
  marketPrices    MarketPrice?
  saleInfo        SaleInfo?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Image {
  id        String   @id @default(uuid())
  url       String
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt DateTime @default(now())
}

model Expense {
  id          String   @id @default(uuid())
  type        String   // maintenance, fuel, washing, other
  description String
  amount      Float
  date        DateTime @default(now())
  vehicleId   String
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt   DateTime @default(now())
}

model MarketPrice {
  id        String   @id @default(uuid())
  wholesale Float
  mmr       Float
  retail    Float
  repasse   Float
  vehicleId String   @unique
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SaleInfo {
  id        String   @id @default(uuid())
  salePrice Float
  saleDate  DateTime @default(now())
  vehicleId String   @unique
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("operator") // operator, admin
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 